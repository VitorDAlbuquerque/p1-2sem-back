// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        String      @id @default(uuid())
  name      String
  email     String      @unique
  password  String
  bio       String      @default("Bio.")
  birthDate String
  gender    String
  country   String
  theme     String      @default("#fff")
  WatchList WatchList[]
  isLiked   isLiked[]
}

model SavedMovies {
  id          String    @id @default(uuid())
  isChecked   Boolean   @default(false)
  Watchlist   WatchList @relation(fields: [WatchlistId], references: [id])
  WatchlistId String
  movieId     Int       @unique
  movieName   String
  movieURLImg String
}

model WatchList {
  id          String        @id @default(uuid())
  name        String
  description String
  privacy     Boolean
  banner      String        @default("")
  createDate  String
  user        user          @relation(fields: [authorId], references: [id])
  authorId    String
  numberLikes Int           @default(0)
  SavedMovies SavedMovies[]
  isLiked     isLiked[]
}

model isLiked {
  user        user      @relation(fields: [userId], references: [id])
  userId      String
  watchlist   WatchList @relation(fields: [watchListId], references: [id])
  watchListId String

  createdAt DateTime @default(now())

  @@id(name: "likeId", [watchListId, userId])
}
